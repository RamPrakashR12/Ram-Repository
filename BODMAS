/*
BODMAS Rule:

Sample Input/Output:
Input : ((17-2)/(1+4))*2 
Ouput : 6

*/
import java.util.*;

class BODMAS{
    
    public static void main(String args[]){
        
        String input = " ((17-2) / (1+4) ) * 2";
        input = input.replaceAll("\\s","");
        String initialInput = input;
        int openBracketCount = 0, closedBracketCount = 0;
        int openBracketPos = 0, closedBracketPos = 0;
        int loopCount = 0, first = 0;
        String SubString = "";
        String Result = "";
        while(input.contains("(")){
            Result = "";
            openBracketCount = 0;
            closedBracketCount = 0;
            char [] eachChar = input.toCharArray();
            int count = input.length();
            loopCount = 0;
            while(loopCount < count){
                if(input.charAt(loopCount)=='('){
                    openBracketCount = 1;
                    openBracketPos = loopCount;
                }
                if(input.charAt(loopCount)==')'){
                    closedBracketCount = 1;
                    closedBracketPos = loopCount;
                    SubString = input.substring(openBracketPos+1 ,closedBracketPos);
                    Result = Calculate(SubString);
                    input = input.substring(0,openBracketPos) + Result +
                    input.substring(closedBracketPos+1, count);
                    break;
                }
                loopCount++;
            }
        }
        Result = Calculate(input);
        System.out.println("Input : " + initialInput + " ");
        
        System.out.println("Ouput : " + Result);
    }
    
    public static String Calculate(String Query){
           String Result = Query; 
           ArrayList<Integer> numbers = new ArrayList<Integer>();
           ArrayList<OPERATORS> operators = new ArrayList<OPERATORS>();
           String [] eachCharArr = Result.split("");
           int loopCount = 0, output = 0, num = 0;
           String Value = "";
           String eachChar = "";
           
           for(;loopCount<Result.length();loopCount++){
               eachChar = eachCharArr[loopCount];
               OPERATORS operator=OPERATORS.getOperator(eachChar);
               if(operator==null){
                   Value = Value + eachChar;
               } else {
                   numbers.add(Integer.parseInt(Value));
                   operators.add(operator);
                   Value = "";
               }
           }
           numbers.add(Integer.parseInt(Value));
           loopCount = 1;
           int sum = numbers.get(0), nextNum = 0;
           for(;loopCount<numbers.size();loopCount++){
               nextNum = numbers.get(loopCount);
               OPERATORS operator = operators.get(loopCount-1);
               
               switch(operator)
               {
                   case ADD:
                       sum = sum + nextNum;
                       break;
                   case SUBTRACT:
                       sum = sum - nextNum;
                       break;
                   case MULTIPLE:
                       sum = sum * nextNum;
                       break;
                   case DIVIDE:
                       sum = sum / nextNum;
                       break;
               }
           }
           return sum+"";
    }
    
    public enum OPERATORS
    {
        ADD("+"),
        SUBTRACT("-"),
        MULTIPLE("*"),
        DIVIDE("/");
        
        private String name;
        
        OPERATORS(String name)
        {
            this.name = name;
        }
        
        public static OPERATORS getOperator(String operator){
            switch(operator)
            {
                case "+":
                    return ADD;
                    //break;
                case "-":
                    return SUBTRACT;
                    //break;
                case "*":
                    return MULTIPLE;
                    //break;
                case "/":
                    return DIVIDE;
                    //break;
                default:
                    return null;
            }
        }
        
        public String getName()
        {
            return this.name;
        }
    };
}
